{"frames":[{"func":"det_join %>% fuzzy_left_join(tast, by = c(DateTime = \"start_date\", \n    DateTime = \"end_date\"), match_fun = list(\">=\", \"<=\"))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"fuzzy_left_join(., tast, by = c(DateTime = \"start_date\", DateTime = \"end_date\"), \n    match_fun = list(\">=\", \"<=\"))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"fuzzy_join(x, y, by, match_fun, mode = \"left\", ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"dplyr::bind_rows(lapply(seq_along(by$x), function(i) {\n    col_x <- x[[by$x[i]]]\n    col_y <- y[[by$y[i]]]\n    indices_x <- tibble::tibble(col = col_x, indices = seq_along(col_x)) %>%  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"list2(...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"lapply(seq_along(by$x), function(i) {\n    col_x <- x[[by$x[i]]]\n    col_y <- y[[by$y[i]]]\n    indices_x <- tibble::tibble(col = col_x, indices = seq_along(col_x)) %>%  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"FUN(X[[i]], ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"which(m)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error in which(m) : argument to 'which' is not logical\n"}